# Generated by Django 4.1.4 on 2023-08-11 15:43

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='city',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name_ar', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('region_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='region',
            fields=[
                ('name_ar', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='wholesaler',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=100)),
                ('products_types', models.TextField()),
                ('description', models.TextField()),
                ('store_photo', models.FileField(blank=True, default=None, null=True, upload_to='static/upload/wholesalers_stores_photos', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'], message='يمكن رفع الصور فقط بالصيغات التالية: (jpg, png, jpeg)')])),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='users.city')),
            ],
        ),
        migrations.CreateModel(
            name='seller',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('store_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stores.store')),
            ],
        ),
        migrations.CreateModel(
            name='rep',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photo', models.FileField(blank=True, default=None, null=True, upload_to='static/upload/reps_photos', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'], message='يمكن رفع الصور فقط بالصيغات التالية: (jpg, png, jpeg)')])),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='users.city')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=24)),
                ('last_name', models.CharField(max_length=24)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=10)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('liked_stores', models.ManyToManyField(blank=True, related_name='+', to='stores.store')),
                ('rep_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.rep')),
                ('seller_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.seller')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('wholesaler_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.wholesaler')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
